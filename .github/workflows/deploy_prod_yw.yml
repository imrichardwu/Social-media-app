name: Deploy to Heroku Production (YW)

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build Frontend
        run: |
          echo "📦 Installing frontend dependencies..."
          cd frontend
          npm ci
          echo "✅ Frontend dependencies installed"

          echo "📝 Running TypeScript type check..."
          npx tsc --noEmit || {
            echo "⚠️  TypeScript issues found (non-blocking)"
            echo "Consider fixing these type issues for better code quality."
          }

          echo "🔧 Removing local .env file to ensure production build..."
          rm -f .env
          echo "✅ Local .env file removed"

          echo "🔨 Building React app for production..."
          VITE_API_URL="" npx vite build || {
            echo "❌ Build failed!"
            exit 1
          }
          

          echo "✅ Build completed successfully"

          echo "📋 Copying build files to Django static directory..."
          cd ..
          echo "🧹 Cleaning old static files..."
          rm -rf backend/staticfiles/*
          mkdir -p backend/staticfiles
          cp -r frontend/dist/* backend/staticfiles/
          echo "✅ Frontend build copied to backend"

          echo "📋 Preparing files for Heroku deployment..."
          cp backend/requirements.txt .
          echo "✅ Requirements.txt copied to root"

          echo "📋 Creating .env file for Heroku..."
          echo "DISABLE_COLLECTSTATIC=1" > .env
          echo "✅ .env file created"

      - name: Clear Heroku Build Cache
        run: |
          echo "🧹 Clearing Heroku build cache..."
          heroku plugins:install heroku-builds
          HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY_YW }} heroku builds:cache:purge -a ${{ secrets.HEROKU_APP_NAME_YW }} || echo "Cache purge failed, continuing..."
          echo "✅ Build cache cleared"

      - name: Set Heroku Config Vars
        run: |
          echo "🔧 Setting Heroku production configuration..."
          curl -X PATCH https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME_YW }}/config-vars \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3" \
            -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY_YW }}" \
            -d '{"DISABLE_COLLECTSTATIC":"1","DJANGO_SETTINGS_MODULE":"project.settings_heroku"}'
          echo "✅ Heroku production configuration set"

      - name: Deploy to Heroku (YW)
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY_YW }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME_YW }}
          heroku_email: ${{ secrets.HEROKU_EMAIL_YW }}
          buildpack: heroku/python
          dontautocreate: true