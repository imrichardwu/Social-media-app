name: Deploy to Heroku

on:
  push:
    branches:
      - development

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Build Frontend
      run: |
        echo "📦 Installing frontend dependencies..."
        cd frontend
        npm ci
        echo "✅ Frontend dependencies installed"
        
        echo "📝 Running TypeScript type check..."
        # Run TypeScript check but don't fail on errors
        npx tsc --noEmit || {
          echo "⚠️  TypeScript issues found (non-blocking)"
          echo "Consider fixing these type issues for better code quality."
        }
        
        echo "🔨 Building React app for production..."
        # Build without TypeScript checking (already done above)
        # Set VITE_API_URL to empty string to use relative URLs
        VITE_API_URL="" npx vite build || {
          echo "❌ Build failed!"
          echo "Check the error messages above."
          exit 1
        }
        echo "✅ Build completed successfully"
        
        echo "📋 Copying build files to Django static directory..."
        cd ..
        mkdir -p backend/staticfiles
        cp -r frontend/dist/* backend/staticfiles/
        echo "✅ Frontend build copied to backend"
        
        echo "📋 Preparing files for Heroku deployment..."
        cp backend/requirements.txt .
        echo "✅ Requirements.txt copied to root"
        
        echo "📋 Creating .env file for Heroku..."
        echo "DISABLE_COLLECTSTATIC=1" > .env
        echo "✅ .env file created"
        
    - name: Set Heroku Config Vars
      run: |
        echo "🔧 Setting Heroku configuration..."
        curl -X PATCH https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME_DEV }}/config-vars \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3" \
          -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY_DEV }}" \
          -d '{"DISABLE_COLLECTSTATIC":"1","DJANGO_SETTINGS_MODULE":"project.settings_heroku"}'
        echo "✅ Heroku configuration set"
        
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY_DEV }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME_DEV }}
        heroku_email: ${{ secrets.HEROKU_EMAIL_DEV }}
        buildpack: heroku/python
        dontautocreate: true